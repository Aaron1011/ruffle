name: Test Rust

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  changes:
    name: Paths filter
    runs-on: ubuntu-22.04
    outputs:
      src: ${{ steps.filter.outputs.src }}
    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            src:
              - '!(web/package.json|web/package-lock.json|web/packages/**|**.md)'

  build:
    needs: changes
    if: needs.changes.outputs.src == 'true'
    name: Test Rust ${{ matrix.rust_version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.rust_version == 'nightly' || matrix.rust_version == 'beta' }}
    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable]
        os: [ubuntu-22.04]

    steps:
      - uses: actions/checkout@v2

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository ppa:kisak/kisak-mesa -y
          sudo apt-get update
          sudo apt-get dist-upgrade
          sudo apt install -y libasound2-dev libxcb-shape0-dev libxcb-xfixes0-dev libgtk-3-dev mesa-vulkan-drivers

      - name: Cache Cargo output
        uses: Swatinem/rust-cache@90429b3dea365e9a1b0cb82d7f98aabf3089dc63
        with:
          shared-key: "desktop"


      - name: Run tests with image tests
        env:
          XDG_RUNTIME_DIR: '' # dummy value, just to silence warnings about it missing
        run: |
          ulimit -c unlimited
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sudo sh
          sudo $HOME/.cargo/bin/cargo test --locked --features imgtests
          sudo chmod -R +rwx /cores/*
          sudo gdb /cores/* --eval-command bt

      - name: Upload images
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: swf_images
          path: tests*/**/actual*.png

  check-required:
    needs: changes
    if: needs.changes.outputs.src == 'false'
    name: Test Rust ${{ matrix.rust_version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust_version: [stable]
        os: [ubuntu-22.04, windows-latest, macos-latest]
        include:
          - rust_version: nightly
            os: ubuntu-22.04
          - rust_version: beta
            os: ubuntu-22.04

    steps:
      - name: No-op
        run: echo noop
